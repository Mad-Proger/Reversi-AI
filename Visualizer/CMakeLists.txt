cmake_minimum_required(VERSION 3.10)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)
add_compile_definitions(SFML_STATIC)

set(DEPENDENCIES_PREFIX C:/Libraries)
set(LIBDIR ${DEPENDENCIES_PREFIX}/lib)
set(INCLUDEDIR ${DEPENDENCIES_PREFIX}/include)

project(Visualizer)

find_library(FREETYPE NAMES freetype PATHS ${LIBDIR} REQUIRED)
find_library(OPENGL32 NAMES opengl32 PATHS ${LIBDIR} REQUIRED)
find_library(WINMM NAMES winmm PATHS ${LIBDIR} REQUIRED)
find_library(GDI32 NAMES gdi32 PATHS ${LIBDIR} REQUIRED)
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
	find_library(SFML_GRAPHICS NAMES sfml-graphics-s-d PATHS ${LIBDIR} REQUIRED)
	find_library(SFML_WINDOW NAMES sfml-window-s-d PATHS ${LIBDIR} REQUIRED)
	find_library(SFML_SYSTEM NAMES sfml-system-s-d PATHS ${LIBDIR} REQUIRED)
else()
	find_library(SFML_GRAPHICS NAMES sfml-graphics-s PATHS ${LIBDIR} REQUIRED)
	find_library(SFML_WINDOW NAMES sfml-window-s PATHS ${LIBDIR} REQUIRED)
	find_library(SFML_SYSTEM NAMES sfml-system-s PATHS ${LIBDIR} REQUIRED)
endif()

add_executable(Visualizer AIPlayer.cpp Desk.cpp Game.cpp GameWindow.cpp main.cpp Matrix.cpp Model.cpp WindowPlayer.cpp)
target_link_libraries(Visualizer PRIVATE ${FREETYPE})
target_link_libraries(Visualizer PRIVATE ${OPENGL32})
target_link_libraries(Visualizer PRIVATE ${WINMM})
target_link_libraries(Visualizer PRIVATE ${GDI32})
target_link_libraries(Visualizer PRIVATE ${SFML_GRAPHICS})
target_link_libraries(Visualizer PRIVATE ${SFML_WINDOW})
target_link_libraries(Visualizer PRIVATE ${SFML_SYSTEM})
target_include_directories(Visualizer PRIVATE ${INCLUDEDIR})